name: Build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      RELEASE_TAG:
        description: "Enter desired release tag"
        required: true
      DOCKER_STAGE:
        description: "Whether to build and push docker images"
        default: 'true'


jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Setup node for open-api get
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Prepare venv
        run: python -m venv venv
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - name: Prepare venv
        run: python -m venv venv && poetry use venv/bin/python3.12;
      - name: Install dependencies
        run: poetry install;
      - name: generate openapi models
        working-directory: .
        run: ./open-api-gen.sh
      - name: run tests
        run: PYTHONPATH=test poetry run pytest -v;
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: "Node set-up"
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Generate open-api
        working-directory: .
        run: ./open-api-gen.sh
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build -- --mode=production
  build-docker-images:
    if: ${{ github.event.inputs.DOCKER_STAGE == 'true' }}
    needs: ['build-backend', 'build-frontend']
    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: "${{ github.event.inputs.RELEASE_TAG }}"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Compose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: KengoTODA/actions-setup-docker-compose@v1
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build images
        run: docker-compose build
      - name: push images
        run: docker-compose push
